[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quantitative methods and statistics (In Sport and Exercise Science)",
    "section": "",
    "text": "Welcome to the course Quantitative methods and Statistics (IDR4000). The course aims to give students an overview of methodological aspects within the field of sport and exercise-physiology. Specifically, planning, conducting and analysing research projects with human participants will be covered. The lecture notes for the course can be found here. This website will contain tutorials that we will work on in class, assignments and additional materials related to the course content."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Quantitative methods and statistics (In Sport and Exercise Science)",
    "section": "",
    "text": "Welcome to the course Quantitative methods and Statistics (IDR4000). The course aims to give students an overview of methodological aspects within the field of sport and exercise-physiology. Specifically, planning, conducting and analysing research projects with human participants will be covered. The lecture notes for the course can be found here. This website will contain tutorials that we will work on in class, assignments and additional materials related to the course content."
  },
  {
    "objectID": "index.html#practical-information",
    "href": "index.html#practical-information",
    "title": "Quantitative methods and statistics (In Sport and Exercise Science)",
    "section": "Practical information",
    "text": "Practical information\nThese notes were updated on r Sys.Date() and cover the course held during 2022 autumn semester. Contact Daniel Hammarström if you have any questions regarding this content.\n\nLearning objectives\nLearning objectives can be read in Norwegian here.\n\n\nLearning strategies\nThe course will include lectures, laboratory exercises, computer exercises and workshops, seminars and student presentations. Lectures will be held in-person and as pre-recorded published on these websites.\nComputer exercises will eventually require that you have special computer software installed on your computer. The software is free (see specific chapters in lecture notes).\nAssignments will be presented on this website with information on how to hand them in. The whole course is evaluated based on a portfolio exam (see below).\n\n\nCourse evaluation\nAs a student you can contribute to the quality of the course by engaging in course evaluation throughout the course. You will be asked to answer a pre-course questionnaire about your expectations and a post-course questionnaire about your experiences. You are also welcomed to take part in systematic discussions during the course about the quality of teaching and course material. With these notes I want to underline the importance of student participation in the continuous development of the course (and program) teaching/learning quality.\n\n\nLecturers and course administration\nIn order of appearance\n\nDaniel Hammarström (daniel.hammarstrom@inn.no), is responsible for course administration and will be teaching statistics.\nTomas Urianstad will organize laboratory work in the physiology lab.\nKristian Lian will be involved in molecular methods.\nProf. Carsten Lundby will cover aspects CO2 re-breathing techniques (physiology).\nProf. Finnur Dellsén will cover philosophy of science.\nProf. Stian Ellefsen will teach molecular methods.\n\n\n\nUpdates, notifications and general communication\nThese course notes will be updated during the course. General information and last minute changes will be posted on Canvas, make sure to check it as part of your daily study routine.\n\n\nLiterature\nA full list of recommended literature can be found here. Literature will be referenced in specific sections in the lecture notes.\n\n\nGrades\nThe course is graded pass/fail.\n\n\nLanguage\nMy (Daniel) first language is Swedish, I’m sure most of you will understand what I’m talking about. However, due to the fact that we accept international students to the program, most written communication and some lectures will be in English. You are not expected to write in English, it is however possible!"
  },
  {
    "objectID": "index.html#assignments-and-portfolio-exam",
    "href": "index.html#assignments-and-portfolio-exam",
    "title": "Quantitative methods and statistics (In Sport and Exercise Science)",
    "section": "Assignments and Portfolio exam",
    "text": "Assignments and Portfolio exam\nThe course is based on several assignments. Some of these assignments are to be handed in as part of a portfolio exam upon which your grade is based.\nAssignments that are due during the course (arbeidskrav) are expected to be further improved after feedback from fellow students and teachers before inclusion in your portfolio.\nThe table below shows all assignments that are part of the course. Some are not to be included in the portfolio and some assignments are group assignments (see Table). In addition to these assignments, non-mandatory homework will be presented during the course.\n\n\n\nAssignment\nDue date\nIncluded in portfolio\nGroup assignment\n\n\n\n\nDescriptive statistics, reliability and validity, tools for reproducible data science\n2022-09-26\nYes\nYes\n\n\nRegression models and prediction from data\n2022-10-03\nNo\nYes\n\n\nExtraction and analysis of DNA\n2022-11-25\nOptionala\nYes\n\n\nExtraction of RNA and analysis of qPCR experiments\n2022-11-25\nOptionala\nYes\n\n\nExtraction and analysis of Protein\n2022-11-25\nOptionala\nYes\n\n\nPhilosophy of scienceb (See canvas)\n2022-10-28\nYes\nNo\n\n\nDrawing inference from statistical models and statistical power\n2022-11-07\nNo\nYes\n\n\nStudy designs\n2022-11-17\nYes\nNo\n\n\nAnalyzing repeated measures experiments\n2022-11-21\nYes\nNo\n\n\n\na Select one laboratory assignments for your portfolio exam. All groups presents one selected method on 2021-11-23. b This assignment is presented in connection with lectures. \nIn addition to arbeidskrav/assignments, you are required to contribute to the course wiki. The wiki page is hosted at github.com/dhammarstrom/IDR4000-2022/. In order to contribute you need to set up your own github account. The language of the wiki should be Norwegian.\nSmaller assignments and quizzes are presented as part of the course, but you are not required to do them to pass the course."
  },
  {
    "objectID": "index.html#other-information",
    "href": "index.html#other-information",
    "title": "Quantitative methods and statistics (In Sport and Exercise Science)",
    "section": "Other information",
    "text": "Other information"
  },
  {
    "objectID": "workshops.html",
    "href": "workshops.html",
    "title": "Workshops",
    "section": "",
    "text": "Workshop\nAdditional material\n\n\n\n\nIntroduction to data science (Norwegian)\n\n\n\nInstalling and starting R\n\n\n\nCreating your first graph\n\n\n\nData wrangling and tables\n\n\n\nData wrangling and tables, part 2\n\n\n\nWriting reports\n\n\n\nCollaborative coding\n\n\n\nReliability and writing up a report (in Norwegian)\n\n\n\nDiscussions on reliability\n\n\n\nThe linear model (1): Straight lines and predicting from models\n\n\n\nThe linear model (2): Categorical predictors and diagnostics\n\n\n\nThe linear model (3): Curve-linear regression\n\n\n\nCreating functions in R\n\n\n\nUnderstanding p-values through simulations\n\n\n\nStudy designs and statistical tests\n\n\n\nAnalyzing trials\n\n\n\nMixed effects models for repeated measures"
  },
  {
    "objectID": "ws2-installing-r.html",
    "href": "ws2-installing-r.html",
    "title": "Starting up R",
    "section": "",
    "text": "Different statistical software packages. Source: The internet!\n\n\n\n\n\n\n\n\nWarning\n\n\n\nAs the image above suggests, the software we will use in this class is Exciting and a bit Dangerous!\n\n\n\n\nR is an open-source programming language1 that has a well developed system for user contribution. This means that it is possible to write extensions, these are also called packages. Packages contain specialized programs designed to solve different tasks.\nThe R software, together with packages can be found at CRAN, the Comprehensive R Archive Network. You can access CRAN from R.\n\n\nRStudio is an Integrated Development Environment. This software makes it easy to “talk” to R by keeping track of your files, any data stored in your computers memory and so on. RStudio contains an editor that makes it easy to edit text files that can be interpreted by R.\nWe will get to know RStudio by checking out:\n\nThe console\nEnvironment and history\nFiles, Plots, Packages, Help and Viewer\nGlobal options\n\nImportantly we will change the option concerning “Save workspace to .RData on exit” to NEVER. This will make your work dependent on what you write in your “programs” which is a good thing for reproducibility.\n\n\n\n\n\n\nReview your understanding\n\n\n\n\n\n\nTell a friend what the words package, CRAN, and open-source means\nExplain to a friend what you do with the R console\nExplain what the environment and history contains\nWhere do you install packages?\nWhy would you change “Save workspace to .RData on exit” to never under Global options?\n\n\n\n\n\n\n\n\nA good thing about R is that you will have to script your work. This essentially creates a “program” that R will interpret. The interpretation of your program will result in some output (e.g., a graph, table, a single number or a report).\nThis separates R from point-and-click or spreadsheet software. This also makes it easier to reproduce an analysis.\nR has many flavors of scripts as some combines text with statistical programming that in the end creates a nice looking report. We will talk more about these variants later.\n\n\n\n\n\nAn object can be a number, a collection of numbers or many other representations of data that is stored in the workspace.\nStart a new script from the File menu (File &gt; New File &gt; R Script), copy the code from the code block below to your script.\nExecute the code by placing the cursor on the row containing the code and pres Ctrl+Enter (Cmd+Enter on Mac).\n\na &lt;- 12\n\nThe &lt;-operator assigns the number 12 to an object called a. This object is stored in the workspace. We can point the arrow in the other direction also.\n\n12 -&gt; b\n\nAssignment using &lt;- or -&gt; can go either way. Alternatively you could use = which will have the same function as &lt;-. Try to assign 12 to c by using the following code 12 = c. You should encounter an error message.\n\n\n\n\n\n\nReview your understanding\n\n\n\n\n\nExplain the following sentence in your own words: “The &lt;-operator assigns the number 12 to an object called a. This object is stored in the workspace.”\n\n\n\n\n\n\nObjects can be, depending on their type, combined. Numeric objects can be used in mathematical operations. What is the result of the following code?\n\na + b\n\nMore complex mathematical treatment is also possible using objects.\n\nx &lt;- 12.3 + 3 * a + -1.2 * sqrt(b)\n\nThe sqrt(b) part in the formula above is the first occurance of a R function. It takes a number (or a vector of numbers) and return the square root.\nFor every function, there is a help page. The help pages for sqrt() can be accessed by typing ?sqrt() in the console.\n\n\n\n\nVectors are a combination of data that can be manipulated. The R function c() combines data into a vector.\n\nv &lt;- c(2, 5, 7, 3, 1)\n\nThe vector v has five numbers (2, 5, 7, 3, 1), we can combine these with another value, let’s say the value stored in a\n\nv + a\n\nHowever, if we combine it with a and b, we run into problems.\n\nv + c(a, b)\n\n\n\n\n\n\n\nReview your understanding\n\n\n\n\n\nExplain the following in your own words why v + c(a, b) resulted in a warning message.\n\n\n\nLet’s add another value to v and try to combine the values stored in v with a and b.\n\nv &lt;- c(v, 1)\n\nv + c(a, b)\n\nWe can examine objects by using R functions such as:\n\nlength(v)\n\nstr(v)\n\nlength(a)\n\nclass(a)\n\n\n\n\nData can be further combined into data frames. These are tabular representations of data with where a row indicate an observation and a column represents a variable. We can create a new data frame using the following code:\n\ndf &lt;- data.frame(v = v, \n                 a = a, \n                 color = c(\"red\", \"red\", \"red\", \"green\", \"green\", \"green\"))\n\nNote that I use the = operator inside the data.frame function. This is a convenient way of separating assignments to the environment/objects from isnside e.g. data abojects or functions.\n\n\n\n\n\n\nReview your understanding\n\n\n\n\n\nExplain how the object a multiplies in the data frame function. Explore, what is the class of df?\n\n\n\nData in a data frame can be accessed in multiple ways. First, to extract a specific variable, we can use the $ operator.\n\ndf$color\n\nThe code above prints the content of the variable color as a vector of characters. A character vector is a collection of text that has no further meaning to R (but might have to us!).\nWe can also extract a specific value using brackets. To extract the second row, from the third column, we would write:\n\ndf[2, 3]\n\n(We can remember this by saying out loud ROW-COLUMN).\nNew variables can be added to the data frame by assignment\n\ndf$new_variable &lt;- df$v * 3.14 \n\n\n\n\n\n\n\nReview your understanding\n\n\n\n\n\nExplain in your own words what happend in the code chunk above.\n\n\n\nWe can also add variables to the data frame that are the results of “tests” of the data.\n\ndf$another_variable &lt;- df$new_variable &gt; 10 \n\nThe operator &gt; tests if observations in the variable new_variable are larger than 10. This results in a logical vector containing TRUE or FALSE. These are special vectors called logical vectors that can be either TRUE or FALSE.\n\n\n\n\n\n\nReview your understanding\n\n\n\n\n\nWe have covered numeric, logical and character vectors. Explain the differences to your friend.\n\n\n\n\n\nThe character vector color contained in the data frame df is a character vector. However, we can transform it to a factor. A factor can be ordered by your specifications. We can also add labels. Let’s reorganize the color variable.\n\ndf$color &lt;- factor(df$color) \n\ndf$color\n\nRun the code above and you will see that by converting the character vector to a factor we ge a new data type that has levels in alphabetical order. We can change the levels to what ever we want using the factor function and the argument levels.\n\ndf$color &lt;- factor(df$color, levels = c(\"red\", \"green\")) \n\ndf$color\n\nThis was the first mention of arguments. Every function usually takes user specified arguments that determines the output from the function. Possible arguments can be reviewed by accessing e.g. ?factor.\n\n\n\n\nIt is good practice to name variables or objects with words that are meaningful to what you are doing. A variable/object name cannot start with a number, it cannot contain spaces or special characters.\nA good programmer is lazy. Avoid mixing large and small letters, reduce the number of symbols in variable names without loosing meaning and be consistent.\n\n\n\nUsing the built in system for plotting, we can create a first figure of our data. This plot has a lot of potential for improvements. We will explore this potential in the next workshop!\n\nplot(df$v, df$new_variable)"
  },
  {
    "objectID": "ws2-installing-r.html#the-r-ecosystem",
    "href": "ws2-installing-r.html#the-r-ecosystem",
    "title": "Starting up R",
    "section": "",
    "text": "R is an open-source programming language1 that has a well developed system for user contribution. This means that it is possible to write extensions, these are also called packages. Packages contain specialized programs designed to solve different tasks.\nThe R software, together with packages can be found at CRAN, the Comprehensive R Archive Network. You can access CRAN from R.\n\n\nRStudio is an Integrated Development Environment. This software makes it easy to “talk” to R by keeping track of your files, any data stored in your computers memory and so on. RStudio contains an editor that makes it easy to edit text files that can be interpreted by R.\nWe will get to know RStudio by checking out:\n\nThe console\nEnvironment and history\nFiles, Plots, Packages, Help and Viewer\nGlobal options\n\nImportantly we will change the option concerning “Save workspace to .RData on exit” to NEVER. This will make your work dependent on what you write in your “programs” which is a good thing for reproducibility.\n\n\n\n\n\n\nReview your understanding\n\n\n\n\n\n\nTell a friend what the words package, CRAN, and open-source means\nExplain to a friend what you do with the R console\nExplain what the environment and history contains\nWhere do you install packages?\nWhy would you change “Save workspace to .RData on exit” to never under Global options?"
  },
  {
    "objectID": "ws2-installing-r.html#scripts",
    "href": "ws2-installing-r.html#scripts",
    "title": "Starting up R",
    "section": "",
    "text": "A good thing about R is that you will have to script your work. This essentially creates a “program” that R will interpret. The interpretation of your program will result in some output (e.g., a graph, table, a single number or a report).\nThis separates R from point-and-click or spreadsheet software. This also makes it easier to reproduce an analysis.\nR has many flavors of scripts as some combines text with statistical programming that in the end creates a nice looking report. We will talk more about these variants later."
  },
  {
    "objectID": "ws2-installing-r.html#r-basics",
    "href": "ws2-installing-r.html#r-basics",
    "title": "Starting up R",
    "section": "",
    "text": "An object can be a number, a collection of numbers or many other representations of data that is stored in the workspace.\nStart a new script from the File menu (File &gt; New File &gt; R Script), copy the code from the code block below to your script.\nExecute the code by placing the cursor on the row containing the code and pres Ctrl+Enter (Cmd+Enter on Mac).\n\na &lt;- 12\n\nThe &lt;-operator assigns the number 12 to an object called a. This object is stored in the workspace. We can point the arrow in the other direction also.\n\n12 -&gt; b\n\nAssignment using &lt;- or -&gt; can go either way. Alternatively you could use = which will have the same function as &lt;-. Try to assign 12 to c by using the following code 12 = c. You should encounter an error message.\n\n\n\n\n\n\nReview your understanding\n\n\n\n\n\nExplain the following sentence in your own words: “The &lt;-operator assigns the number 12 to an object called a. This object is stored in the workspace.”\n\n\n\n\n\n\nObjects can be, depending on their type, combined. Numeric objects can be used in mathematical operations. What is the result of the following code?\n\na + b\n\nMore complex mathematical treatment is also possible using objects.\n\nx &lt;- 12.3 + 3 * a + -1.2 * sqrt(b)\n\nThe sqrt(b) part in the formula above is the first occurance of a R function. It takes a number (or a vector of numbers) and return the square root.\nFor every function, there is a help page. The help pages for sqrt() can be accessed by typing ?sqrt() in the console."
  },
  {
    "objectID": "ws2-installing-r.html#vectors",
    "href": "ws2-installing-r.html#vectors",
    "title": "Starting up R",
    "section": "",
    "text": "Vectors are a combination of data that can be manipulated. The R function c() combines data into a vector.\n\nv &lt;- c(2, 5, 7, 3, 1)\n\nThe vector v has five numbers (2, 5, 7, 3, 1), we can combine these with another value, let’s say the value stored in a\n\nv + a\n\nHowever, if we combine it with a and b, we run into problems.\n\nv + c(a, b)\n\n\n\n\n\n\n\nReview your understanding\n\n\n\n\n\nExplain the following in your own words why v + c(a, b) resulted in a warning message.\n\n\n\nLet’s add another value to v and try to combine the values stored in v with a and b.\n\nv &lt;- c(v, 1)\n\nv + c(a, b)\n\nWe can examine objects by using R functions such as:\n\nlength(v)\n\nstr(v)\n\nlength(a)\n\nclass(a)"
  },
  {
    "objectID": "ws2-installing-r.html#data-frames",
    "href": "ws2-installing-r.html#data-frames",
    "title": "Starting up R",
    "section": "",
    "text": "Data can be further combined into data frames. These are tabular representations of data with where a row indicate an observation and a column represents a variable. We can create a new data frame using the following code:\n\ndf &lt;- data.frame(v = v, \n                 a = a, \n                 color = c(\"red\", \"red\", \"red\", \"green\", \"green\", \"green\"))\n\nNote that I use the = operator inside the data.frame function. This is a convenient way of separating assignments to the environment/objects from isnside e.g. data abojects or functions.\n\n\n\n\n\n\nReview your understanding\n\n\n\n\n\nExplain how the object a multiplies in the data frame function. Explore, what is the class of df?\n\n\n\nData in a data frame can be accessed in multiple ways. First, to extract a specific variable, we can use the $ operator.\n\ndf$color\n\nThe code above prints the content of the variable color as a vector of characters. A character vector is a collection of text that has no further meaning to R (but might have to us!).\nWe can also extract a specific value using brackets. To extract the second row, from the third column, we would write:\n\ndf[2, 3]\n\n(We can remember this by saying out loud ROW-COLUMN).\nNew variables can be added to the data frame by assignment\n\ndf$new_variable &lt;- df$v * 3.14 \n\n\n\n\n\n\n\nReview your understanding\n\n\n\n\n\nExplain in your own words what happend in the code chunk above.\n\n\n\nWe can also add variables to the data frame that are the results of “tests” of the data.\n\ndf$another_variable &lt;- df$new_variable &gt; 10 \n\nThe operator &gt; tests if observations in the variable new_variable are larger than 10. This results in a logical vector containing TRUE or FALSE. These are special vectors called logical vectors that can be either TRUE or FALSE.\n\n\n\n\n\n\nReview your understanding\n\n\n\n\n\nWe have covered numeric, logical and character vectors. Explain the differences to your friend.\n\n\n\n\n\nThe character vector color contained in the data frame df is a character vector. However, we can transform it to a factor. A factor can be ordered by your specifications. We can also add labels. Let’s reorganize the color variable.\n\ndf$color &lt;- factor(df$color) \n\ndf$color\n\nRun the code above and you will see that by converting the character vector to a factor we ge a new data type that has levels in alphabetical order. We can change the levels to what ever we want using the factor function and the argument levels.\n\ndf$color &lt;- factor(df$color, levels = c(\"red\", \"green\")) \n\ndf$color\n\nThis was the first mention of arguments. Every function usually takes user specified arguments that determines the output from the function. Possible arguments can be reviewed by accessing e.g. ?factor."
  },
  {
    "objectID": "ws2-installing-r.html#naming-variables",
    "href": "ws2-installing-r.html#naming-variables",
    "title": "Starting up R",
    "section": "",
    "text": "It is good practice to name variables or objects with words that are meaningful to what you are doing. A variable/object name cannot start with a number, it cannot contain spaces or special characters.\nA good programmer is lazy. Avoid mixing large and small letters, reduce the number of symbols in variable names without loosing meaning and be consistent."
  },
  {
    "objectID": "ws2-installing-r.html#a-first-plot",
    "href": "ws2-installing-r.html#a-first-plot",
    "title": "Starting up R",
    "section": "",
    "text": "Using the built in system for plotting, we can create a first figure of our data. This plot has a lot of potential for improvements. We will explore this potential in the next workshop!\n\nplot(df$v, df$new_variable)"
  },
  {
    "objectID": "ws2-installing-r.html#footnotes",
    "href": "ws2-installing-r.html#footnotes",
    "title": "Starting up R",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nA more elaborate description can be found at the CRAN FAQ↩︎"
  }
]